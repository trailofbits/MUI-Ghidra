syntax = "proto3";

package muicore;

service ManticoreUI {
    rpc Terminate(ManticoreInstance) returns (TerminateResponse) {}
    rpc Start(CLIArguments) returns (ManticoreInstance) {}
    rpc TargetAddress(AddressRequest) returns (TargetResponse) {}
}

message LogMessage{
	string content = 1;
}

message State{

    enum StateType{
        READY = 0;
        BUSY = 1;
        KILLED = 2;
        TERMINATED = 3;
    }
    
    int32 id = 2; // state ID
    StateType type = 3; // Type of state
    string reason = 4; // Reason for execution stopping
    int32 num_executing = 5; // number of executing instructions
    int32 wait_time = 6; 
}

message StateList{
    repeated State states = 7; 
}

message MessageList{
    repeated LogMessage messages = 8; 
}


message ManticoreInstance {
    string uuid = 9;
}

message TerminateResponse {
    bool success = 10;
}

message CLIArguments {
    string program_path = 11;
    repeated string binary_args = 16;	
    repeated string envp = 17;
    repeated string symbolic_files = 18;
    string concrete_start = 19;
    string stdin_size = 20;
    map<string, string> additional_mcore_args = 21;
}

message AddressRequest {

    enum TargetType {
        FIND = 0;
        AVOID = 1;
        CLEAR = 2;
    }

    ManticoreInstance mcore_instance = 12;
    uint64 address = 13;
    TargetType type = 14;
}

message TargetResponse {
    bool success = 15;
}


